#                                               -*- Autoconf -*-A
# Process this file with autoconf to produce a configure script.
AC_INIT(OpenDiameter, 1.0.7-h, yohba@tari.toshiba.com)
AM_INIT_AUTOMAKE([subdir-objects])

# Configuration headers
AC_CONFIG_HEADERS([include/config.h])

# Program Defaults
AC_DISABLE_SHARED

# Use of libtool
AC_PROG_LIBTOOL

# Checks for build environment 
# AC_CANONICAL_HOST

# Checks for environment
AC_MSG_CHECKING([existence of ACE_ROOT variable])
if test -z "$ACE_ROOT"; then 
   AC_MSG_RESULT(fail)
   AC_MSG_ERROR([ACE_ROOT not defined, you MUST install ACE or set ACE_ROOT if already installed]); 
else
   AC_MSG_RESULT(yes)
fi
AC_MSG_CHECKING([existence of BOOST_ROOT variable])
if test -z "$BOOST_ROOT"; then 
   AC_MSG_RESULT(fail)
   AC_MSG_ERROR([BOOST_ROOT not defined, you MUST install spirit 1.6.1 or greater or set BOOST_ROOT if already installed]); 
else
   AC_MSG_RESULT(yes)
fi

# Checks for ODBC support
AC_ARG_ENABLE(odbc, AC_HELP_STRING([--enable-odbc], [Compiles Open Diameter Accounting with unixODBC support]))
if test "$enable_odbc" = "yes"; then
   AC_SUBST(L_ODBCFLAGS, ["-DAAA_ODBC_XFORMER"])
fi

# Checks for MPA support
AC_ARG_ENABLE(mpa, AC_HELP_STRING([--enable-mpa], [Compiles with MPA support]))
if test "$enable_mpa" = "yes"; then
   AC_SUBST(L_MPAFLAGS, ["-DPANA_MPA_SUPPORT"])
fi

# Checks for EAP-Archie inclusion 
AC_ARG_ENABLE(eap-archie, AC_HELP_STRING([--enable-eap-archie], [Compiles the EAP-Archie library]))
AM_CONDITIONAL([OPT_EAP_ARCHIE], [test "$enable_eap_archie" = "yes"]) 
if test "$enable_eap_archie" = "yes"; then
AC_MSG_CHECKING([existence of EAP_ARCHIE_ROOT variable])
if test -z "$EAP_ARCHIE_ROOT"; then 
   AC_MSG_RESULT(fail)
   AC_MSG_ERROR([EAP_ARCHIE_ROOT not defined, you MUST install eap-archie and make sure EAP_ARCHIE_ROOT points to the source tree]); 
else
   AC_MSG_RESULT(yes)
fi
fi

# Checks whether --with-eap-tls was given.
AC_ARG_WITH(eap-tls, [  --with-eap-tls          compile the EAP-TLS library])
AM_CONDITIONAL(compile_EAPTLS, [test "$with_eap_tls" = "yes"])

# Checks for programs.
AC_PROG_CC
AC_PROG_CXX
AC_PROG_INSTALL
AC_PROG_LIBTOOL
AM_PROG_CC_C_O

# Checks for libraries.

# Checks for headers
AC_CHECK_HEADERS(ifaddrs.h)
AC_CHECK_HEADERS(net/if_dl.h)
AC_CHECK_HEADERS(shadow.h)

# Checks for typedefs, structures, and compiler characteristics.
AC_HEADER_STDBOOL
AC_C_CONST
AC_C_INLINE

# Checs for functions
AC_CHECK_FUNCS(getifaddrs)

# Substitutions
AC_SUBST(LIBTOOL_DEPS)
case $host in
  *-*-freebsd*)
     AC_SUBST(L_CPPFLAGS, ["-Wall -Wno-strict-aliasing -I$ACE_ROOT -I$BOOST_ROOT -pthread"])
     AC_SUBST(L_CXXFLAGS, ["-Wall -Wno-strict-aliasing -I$ACE_ROOT -I$BOOST_ROOT -pthread"])
     AC_SUBST(L_LDFLAGS, ["-L$ACE_ROOT/ace -pthread"])
     AC_SUBST(L_LIBS, ["-lc_r -lssl -lcrypto -lACE_SSL -lACE -lACEXML -lACEXML_Parser"])
     AC_SUBST(HOST_OS, [OS_FREEBSD])
  ;;
  *-*-linux*)
     AC_SUBST(L_CPPFLAGS, ["-Wall -Wno-strict-aliasing -I$ACE_ROOT -I$BOOST_ROOT -g"])
     AC_SUBST(L_CXXFLAGS, ["-Wall -Wno-strict-aliasing -I$ACE_ROOT -I$BOOST_ROOT -g"])
     AC_SUBST(L_LDFLAGS, ["-L$ACE_ROOT/ace"])
     AC_SUBST(L_LIBS, ["-lssl -lcrypto -lACE_SSL -lACE -lACEXML -lACEXML_Parser"])
     AC_SUBST(HOST_OS, [OS_LINUX])
  ;;
  *)
     AC_MSG_ERROR([Unsupported OS]); 
esac

# Default definitions for global macros
AC_DEFINE_UNQUOTED([AAA_FSM_EVENT_DEBUG], [0], [Diameter peer fsm debugging])
AC_DEFINE_UNQUOTED([AAA_SESSION_DEBUG], [0], [Diameter generic session fsm debugging])
AC_DEFINE_UNQUOTED([AAA_SESSION_AUTH_DEBUG], [0], [Diameter auth session fsm debugging])
AC_DEFINE_UNQUOTED([AAA_SESSION_ACCT_DEBUG], [0], [Diameter acct session fsm debugging])
AC_DEFINE_UNQUOTED([AAA_ROUTE_DEBUG], [0], [Diameter router debugging])
AC_DEFINE_UNQUOTED([AAA_XML_DEBUG], [0], [Diameter XML config loader debugging])
AC_DEFINE_UNQUOTED([PANA_DEBUG], [0], [PANA debugging flag])
AC_DEFINE_UNQUOTED([PANA_SA_DEBUG], [0], [PANA key generator debugging flag])

# PANA cookie debugging flag 
AC_DEFINE_UNQUOTED([PANA_COOKIE_DEBUG], [0], [PANA cookie debugging flag])

# PANA dhcp key generator debugging flag 
AC_DEFINE_UNQUOTED([PANA_DHCP_DEBUG], [0], [PANA dhcp key generator debugging flag])

# Standard libraries for distribution
AC_CONFIG_FILES([Makefile
                 libodutl/Makefile               
                 libdiameter/Makefile               
                 libdiamparser/Makefile
                 libeap/Makefile
                 libpana/Makefile
                 libdiametereap/Makefile
                 libdiametermip4/Makefile
                 libdiameternasreq/Makefile
                 libradius/Makefile
                 applications/Makefile
                 applications/nas/Makefile
                 applications/aaa/Makefile
                 applications/pana/Makefile])

# Generate output
AC_OUTPUT
